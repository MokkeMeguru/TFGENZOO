#+options: ':t *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
* TFGENZOO (Generative Model x Tensorflow 2.x)
#+date: <2020-07-11 Sat>
#+author: MokkeMeguru
#+email: meguru.mokke@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 26.3 (Org mode 9.4)

[[https://github.com/MokkeMeguru/TFGENZOO/workflows/tensorflow%20test/badge.svg?branch=master]]
[[https://img.shields.io/badge/License-MIT-yellow.svg]]
[[file:https://img.shields.io/badge/python-3.7-blue.svg]]
[[file:https://img.shields.io/badge/tensorflow-%3E%3D2.2.0-brightgreen.svg]]
[[file:https://badge.fury.io/py/TFGENZOO.svg]]

* What's this repository?
  This is a repository for some researcher to build some Generative models using Tensorflow 2.x.

  I NEED YOUR HELP(please let me know about formula, implementation and anything you worried)
  
#+ATTR_HTML: :style margin-left: auto; margin-right: auto;
[[https://raw.githubusercontent.com/MokkeMeguru/TFGENZOO/master/docs/tfgenzoo_header.png]]

* Zen of this repository
#+begin_example
We don't want to need flexible architectures.
We need strict definitions for shapes, parameters, and formulas.
We should Implement correct codes with well-documented(tested).
#+end_example

* How to use?
** By Install
- pipenv
   #+begin_src
   pipenv install TFGENZOO==1.2.4.post7
   #+end_src
  
- pip
   #+begin_src
    pip install TFGENZOO==1.2.4.post7
   #+end_src
** Source build for development

  1. clone this repository (If you want to do it, I will push this repository to PYPI)
  2. build this repository ~docker-compose build~
  3. run the environment ~sh run_script.sh~
  4. connect it via VSCode or Emacs or vi or anything.

* Examples
  - [[https://github.com/MokkeMeguru/TFGENZOO_EXAMPLE][TFGENZOO_EXAMPLE]]
  - Simple Tutorials
    - [[./tutorials/01_What_is_the_invertible_layer.ipynb][What is the invertible layer]]
      The tutorial about Flow-based Model
    - [[./tutorials/02_conditional_flow-based_model.ipynb][conditional flow-based model]]
      How to add conditional input into Flow-based Model for the image generation.

* Roadmap
    - [X] Flow-based Model Architecture (RealNVP, Glow)
    - [ ] i-ResNet Model Architecture (i-ResNet, i-RevNet)
    - [ ] GANs Model Architecture (GANs)


* Remarkable Backlog
Whole backlog is [[https://github.com/MokkeMeguru/TFGENZOO/wiki/Backlog][here]]

** News [2020/6/16]
New training results [[https://www.tensorflow.org/datasets/catalog/oxford_flowers102][Oxford-flower102]] with only 8 hours! (Quadro P6000 x 1)

|------------------+-------------------+-------+------------|
| data             |         NLL(test) | epoch | pretrained |
|------------------+-------------------+-------+------------|
| Oxford-flower102 | 4.590211391448975 |  1024 | ---        |
|------------------+-------------------+-------+------------|

#+ATTR_HTML: :style margin-left: auto; margin-right: auto;
[[https://raw.githubusercontent.com/MokkeMeguru/TFGENZOO/master/docs/oxford.png]]

see more detail, you can see [[https://docs.google.com/presentation/d/12z6MZizIsytLxUb2ly7vYorFiKruIGZ2ckQ0-By4b6s/edit?usp=sharing][my internship's report]] (Japanese only, if you need translated version, please contact me.)

** News [2020/7/11]
Add some tutorial into ~./tutorial~

* Contact
MokkeMeguru ([[https://twitter.com/MeguruMokke][@MokkeMeguru]]): DM or Mention Please (in Any language).
